<?xml version="1.0" encoding="utf-8"?>
<TemplateDescription name="program" basedOn="codeTemplate" supportedFirmwareVersions="19.0.0.16199" requiredCliVersion="19.0.1.762" 
                     version="1.1" isRelevantForProjectNamespace="true" xmlns="http://www.phoenixcontact.com/schema/clitemplates">
  <Arguments>
    <Argument name="path" short-name="p" help="Absolute path to the project settings file." default="./plcnext.proj" has-value="true"/>
	  <Argument name="namespace" default="$(component.namespace)">
	    <ValueRestriction>
	      <Pattern>^(?:[a-zA-Z][a-zA-Z0-9_]*\.)*[a-zA-Z](?!.*__)[a-zA-Z0-9_]*$</Pattern>
	    </ValueRestriction>
	  </Argument>
    <Argument name="sources" help="The path of the source directories separated by ','. This is used to find the specified component. Default is the 'src' directory if such a directory exists. If not, the directory defined with the '--path' option is used. Relative paths are relative to the directory defined with the '--path' option. If any path contains a ' ' quotation marks should be used around all paths, e.g. &quot;path1,path With Space,path2&quot;." has-value="true" multiplicity="OneOrMore"/>
  </Arguments>
	<Relationship name="component" type="component"/>
	<File name="$(name).cpp" template="Program.cpp" path="$([if-exist]output)$(output)$([else])$(path)$([end-if-exist])"/>
	<File name="$(name).hpp" template="Program.hpp" key="program" path="$([if-exist]output)$(output)$([else])$(path)$([end-if-exist])"/>
	<GeneratedFile name="$(name).progmeta" template="Program.progmeta" generator="Config" path="$(component.name)/$(name)" deployPath="$(component.name)/$(name)"/>
  <Description>Create a new program inside the project.</Description>
  <Example>
    <Arguments>
      <Argument name="name" value="NewProgram"/>
      <Argument name="path" value="Path/To/Project"/>
    </Arguments>
    <Relationship name="component" value="SomeComponent"/>
    <Description>creates a new program 'NewProgram' in the 'src' directory with the root namespace of the project</Description>
  </Example>
  <Example>
    <Arguments>
      <Argument name="name" value="NewProgram"/>
      <Argument name="namespace" value="SomeNamespace"/>
      <Argument name="output" value="Folder"/>
      <Argument name="path" value="Path/To/Project"/>
    </Arguments>
    <Relationship name="component" value="SomeComponent"/>
    <Description>creates a new program 'NewProgram' in the 'src/Folder' directory with the namespace 'SomeNamespace' of the project</Description>
  </Example>
</TemplateDescription>