<?xml version="1.0" encoding="utf-8"?>
<TemplateDescription name="snproject" isRoot="true" basedOn="template" supportedFirmwareVersions="19.0.0.16199" requiredCliVersion="19.0.0.660" version="1.0" 
                     xmlns="http://www.phoenixcontact.com/schema/clitemplates" identifier="ProjectSettingsIdentifier"
                     generateEngine="SharedNativeGenerateEngine" deployEngine="SharedNativeDeployEngine">
  <Arguments>
    <Argument name="name" default="$(output.format.directoryName.format.escapeProjectName)">
      <ValueRestriction min-length="2" max-length="128" description="This must be a valid C++ type name. It must start with an upper case letter.">
      	<Pattern>^(?:[A-Z][a-zA-Z0-9_]*\.)*[A-Z](?!.*__)[a-zA-Z0-9_]*$</Pattern>
      </ValueRestriction>
    </Argument>
    <Argument name="output" default="$([if-specified]name)$(name)$([else])$(active-directory)$([end-if-specified])"/>
  </Arguments>
  <File name="$(name)CSharp/$(name)CSharp.csproj" template="CSharp/.csproj"/>
  <File name="$(name)CSharp/Properties/AssemblyInfo.cs" template="CSharp/Properties/AssemblyInfo.cs"/>
  <File name="$(name)CSharp/ProjectItems/LibraryDescription.xml" template="CSharp/ProjectItems/LibraryDescription.xml" deployPath="."/>
  <GeneratedFile name="$(name).h" template="Cpp/.h" generator="code"/>
  <File name="$(name)Cpp/CMakeLists.txt" template="Cpp/CMakeLists.txt"/>
  <File name="$(name)Cpp/plcnext.proj" template="Cpp/.proj"/>
  <Description>Create a new shared native project.</Description>
  <GenerateStep generator="code">
    <Arguments>
      <Argument name="msbuild" has-value="true" help="Only for snprojects. Path to msbuild."/>
      <Argument name="buildtype" short-name="b" has-value="true" help="Only for snprojects. Build type, e.g. Debug. Default is Release."/>
    </Arguments>
  </GenerateStep>
  <DeployPostStep identifier="SharedNativeLibraryBuilderDeployStep">
    <Arguments>
      <Argument name="id" has-value="true" short-name="i" help="The GUID for the library. If this option is not used, the id stored in the project settings file will be used instead."/>
      <Argument name="librarydescription" has-value="true" short-name="d" help="A description of the library. If this option is used, a project configuration file will be ignored. Use \n for linebreak and \&quot; for quotation mark "/>
      <Argument name="libraryversion" has-value="true" short-name="v" help="The version of the library. If this option is used, a project configuration file will be ignored."/>
      <Argument name="engineerversion" has-value="true" short-name="e" help="The version of the PLCnext Engineer for which this library shall be built." />
      <Argument name="solutionversion" has-value="true" help="The AdeSolutionVersion for which this library shall be built. Can not be used together with --engineerversion." />
      <Argument name="excludefiles" has-value="true" short-name="x" multiplicity="OneOrMore" separator=" " help="Files that should not be deployed. Files are separated by ' '. Will be excluded for all targets for which the deploy is executed. It can contain the wildcard '*'. This option will be ignored if 'files' option is used."/>
      <Argument name="msbuild" has-value="true" help="Path to msbuild."/>
      <!--signing options -->
      <Argument name="sign" has-value="false" help="Set this option if the resulting library shall be signed. A private key, public key and at least one certificate need to be provided. They can be combined in one PKCS#12 archive or provided as separate PEM files. Set either --timestamp and provide a timestamp server through --timestampconfiguration to get a CAdES-T signature or set '--notimestamp' to get CAdES-B." />
      <Argument name="pkcs12" has-value="true" multiplicity="One" help="Path to PKCS#12 archive containing the private and public key and certificates for signing." />
      <Argument name="privatekey" has-value="true" multiplicity="One" help="Path to PEM file containing the private key." />
      <Argument name="publickey" has-value="true" multiplicity="One" help="Path to PEM file containing the public key." />
      <Argument name="certificates" has-value="true" multiplicity="OneOrMore" separator="," help="Paths to PEM files containing certificates. Separated by ','." />
      <Argument name="timestamp" has-value="false" help="Set either this option to get a CAdES-T signature or set '--notimestamp' to get CAdES-B." />
      <Argument name="notimestamp" has-value="false" help="Set either this option to get a CAdES-B signature or set '--timestampserver' and provide '--timestampconfiguration' to get CAdES-T." />
      <Argument name="password" has-value="true" multiplicity="One" help="Password for private key file. If not set user will be prompted to enter the password when executing command." />
      <Argument name="timestampconfiguration" has-value="true" multiplicity="One" help="Path to timestamp configuration file (.json) for setting e.g. timestampserver uri, proxy settings... See info center for details." />
    </Arguments>
  </DeployPostStep>
</TemplateDescription>
