<?xml version="1.0" encoding="utf-8"?>
<TemplateDescription name="project" isRoot="true" basedOn="baseproject" supportedFirmwareVersions="19.0.0.16199" requiredCliVersion="19.0.0.660" version="1.0" 
                     xmlns="http://www.phoenixcontact.com/schema/clitemplates" identifier="ProjectSettingsIdentifier">
	<Arguments>
	  <Argument name="component" has-value="true" short-name="c" help="The name of the component which will be automatically created." default="$(name.format.lastNamespacePart)Component">
	    <ValueRestriction>
	      <Pattern>^[A-Z](?!.*__)[a-zA-Z0-9_]*$</Pattern>
	    </ValueRestriction>
	  </Argument>
	  <Argument name="program" has-value="true" short-name="p" help="The name of the program which will be automatically created." default="$(name.format.lastNamespacePart)Program">
	    <ValueRestriction>
	      <Pattern>^[A-Z](?!.*__)[a-zA-Z0-9_]*$</Pattern>
	    </ValueRestriction>
	  </Argument>
    <Argument name="namespace" help="The root namespace for the $(template.name). It is used to resolve the initial component and program namespace." />
	</Arguments>
	<AddTemplate template="component">
		<Arguments>
			<Argument name="name" value="$(component)"/>
		  <Argument name="namespace" value="$(namespace)"/>
		</Arguments>
	</AddTemplate>
	<AddTemplate template="program">
		<Arguments>
			<Argument name="name" value="$(program)"/>
		  <Argument name="namespace" value="$(namespace)"/>
		</Arguments>
    <Relationship name="component" value="$(component)"/>
	</AddTemplate>
  <File name="plcnext.proj" template=".proj"/>
	<GeneratedFile name="$(name.format.lastNamespacePart.format.escapeProjectName)Library.meta.cpp" template="Library.meta.cpp" 
				   generator="Code" aggregated="generated.cpp"/>
	<GeneratedFile name="$(namespace).libmeta" template="Library.libmeta" 
				   generator="Config"/>
	<GeneratedFile name="$(namespace).typemeta" template="Library.typemeta" 
				   generator="Config"/>
  <Description>Create a new project. This project is a plmproject.</Description>
  <Example>
    <Arguments>
      <Argument name="name" value="ProjectName"/>
    </Arguments>
    <Description>creates a new project in the directory 'ProjectName' with the component 'ProjectNameComponent', the program 'ProjectNameProgram' both in the namespace 'ProjectName'</Description>
  </Example>
  <Example>
    <Arguments>
      <Argument name="name" value="ProjectName"/>
      <Argument name="component" value="SomeComponent"/>
      <Argument name="program" value="SomeProgram"/>
      <Argument name="namespace" value="SomeNamespace"/>
    </Arguments>
    <Description>creates a new project in the directory 'ProjectName' with the component 'SomeComponent', the program 'SomeProgram' both in the namespace 'SomeNamespace'</Description>
  </Example>
</TemplateDescription>